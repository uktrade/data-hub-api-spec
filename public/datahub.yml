swagger: '2.0'

info:
  description: Data Hub API
  version: 1.0.0
  title: Data Hub API
  contact:
    email: jim.smith@digital.trade.gov.uk
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

schemes:
- https
- http

securityDefinitions:
  OauthSecurity:
    type: oauth2
    flow: password
    tokenUrl: '/token/'
    scopes:
      user: User scope

security:
  - OauthSecurity:
    - user

paths:
  /v3/company/{companyId}:
    get:
      tags:
      - company
      summary: Returns a company from the Data Hub repository
      operationId: getcompany
      description: |
        Passing in a company UUID returns a Data Hub company object
      produces:
      - application/json
      parameters:
      - in: path
        name: companyId
        description: UUID for a Data Hub company
        required: true
        type: string
        format: uuid
      responses:
        200:
          description: JSON API formatted company object
          schema:
            $ref: '#/definitions/Company'
        400:
          description: bad input parameter
        404:
          description: company does not exist
    patch:
      tags:
      - company
      summary: updates a company
      operationId: updateCompany
      description: Updates an existing company, only changing fields specified in the request
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: companyId
        description: UUID for a Data Hub company
        type: string
        required: true
      - in: body
        name: company
        description: Company data to update
        required: true
        schema:
          $ref: '#/definitions/Company'
      responses:
        200:
          description: item updated
        400:
          description: invalid input, object invalid
  /v3/company/{companyId}/audit:
    get:
      tags:
      - company
      summary: Get audit log
      operationId: getCompanyAudit
      description: |
        Returns the audit log for a specified company
      produces:
      - application/json
      parameters:
      - in: path
        name: companyId
        description: UUID for a Data Hub company
        required: true
        type: string
        format: uuid
      responses:
        200:
          description: JSON API formatted company object
          schema:
            $ref: '#/definitions/AuditItemList'
        404:
          description: company does not exist
  /v3/company/{company_id}/archive:
    post:
      tags:
      - company
      summary: Archives a company with a reason
      operationId: archiveCompany
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: company_id
        description: UUID of company
        required: true
        type: string
        format: uuid
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ArchiveReason'
      responses:
        201:
          description: company archived
        400:
          description: input invalid
        404:
          description: company is already archived or does not exist
  /v3/company/{company_id}/unarchive:
    post:
      tags:
      - company
      summary: Unarchives a company
      operationId: unarchiveCompany
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: company_id
        description: UUID of company
        required: true
        type: string
        format: uuid
      responses:
        201:
          description: company unarchived
        400:
          description: input invalid
        404:
          description: company is already archived or does not exist
  /v3/company:
    post:
      tags:
      - company
      summary: adds a Data Hub company
      operationId: addCompany
      description: Adds a Data Hub company from a Companies House company
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: company
        description: Company to add
        required: true
        schema:
          $ref: '#/definitions/Company'
      responses:
        201:
          description: item created
        400:
          description: invalid input, object invalid
        409:
          description: company already exists
  /v3/ch-company/{company_number}:
    get:
      tags:
      - company
      summary: Returns a Companies House company from the Data Hub repository
      operationId: getchcompany
      description: |
        Passing in a Companies House company number returns a Data Hub Companies House company object
      produces:
      - application/json
      parameters:
      - in: path
        name: company_number
        description: Companies House number
        required: true
        type: string
      responses:
        200:
          description: JSON API formatted company object
          schema:
            $ref: '#/definitions/CompaniesHouseCompany'
        400:
          description: bad input parameter
        404:
          description: company does not exist
  /v3/contact:
    get:
      tags:
      - contact
      summary: Gets a list of contacts in the system
      operationId: getAllContacts
      description: Gets a list of contacts, optionally filtered by company
      produces:
      - application/json
      parameters:
      - in: query
        name: company_id
        description: UUID of a company to filter results by
        default: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
        required: false
        type: string
        format: uuid
      - in: query
        name: offset
        type: integer
        description: Pagination parameter
        required: false
      - in: query
        name: limit
        type: integer
        description: Pagination parameter
        required: false
      responses:
        200:
          description: Single page of results
          schema:
            $ref: '#/definitions/ContactList'
        400:
          description: bad input parameter
    post:
      tags:
      - contact
      summary: Creates a contact
      operationId: createContact
      description: Adds a Data Hub contact from a Companies House contact
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: contact
        description: Contact to add
        required: true
        schema:
          $ref: '#/definitions/Contact'
      responses:
        201:
          description: item created
        400:
          description: invalid input, object invalid
        409:
          description: contact already exists
  /v3/contact/{contactId}:
    get:
      tags:
      - contact
      summary: Gets a single contact
      operationId: getContact
      description: |
        Passing in a contact UUID returns a Data Hub contact object
      produces:
      - application/json
      parameters:
      - in: path
        name: contactId
        description: UUID for a Data Hub contact
        required: true
        type: string
        format: uuid
      responses:
        200:
          description: JSON contact object
          schema:
            $ref: '#/definitions/Contact'
        400:
          description: bad input parameter
        404:
          description: contact does not exist
    patch:
      tags:
      - contact
      summary: Updates a contact
      operationId: updateContact
      description: Updates an existing contact, changing only the fields specified in the request
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: contactId
        description: UUID for a Data Hub contact
        type: string
        required: true
      - in: body
        name: contact
        description: Contact data to update
        required: true
        schema:
          $ref: '#/definitions/Contact'
      responses:
        200:
          description: item updated
        400:
          description: invalid input, object invalid
  /v3/contact/{contactId}/audit:
    get:
      tags:
      - contact
      summary: Get audit log for a contact
      operationId: getContactAudit
      description: |
        Returns the audit log for a specified contact
      produces:
      - application/json
      parameters:
      - in: path
        name: contactId
        description: UUID for a Data Hub contact
        required: true
        type: string
        format: uuid
      responses:
        200:
          description: JSON contact object
          schema:
            $ref: '#/definitions/AuditItemList'
        404:
          description: contact does not exist
  /v3/contact/{contactId}/archive:
    post:
      tags:
      - contact
      summary: Archives a contact with a reason
      operationId: archiveContact
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: contactId
        description: UUID of contact
        required: true
        type: string
        format: uuid
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ArchiveReason'
      responses:
        201:
          description: contact archived
        400:
          description: input invalid
        404:
          description: contact is already archived or does not exist
  /v3/contact/{contactId}/unarchive:
    post:
      tags:
      - contact
      summary: Unarchives a contact
      operationId: unarchiveContact
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: contactId
        description: UUID of contact
        required: true
        type: string
        format: uuid
      responses:
        201:
          description: contact unarchived
        400:
          description: input invalid
        404:
          description: contact is already archived or does not exist
  /v3/interaction:
    get:
      tags:
      - interaction
      summary: Gets a list of interactions in the system
      operationId: getAllInteractions
      description: Gets a list of interactions, optionally filtered by company, contact or investment project
      produces:
      - application/json
      parameters:
      - in: query
        name: company_id
        description: UUID of a company
        default: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
        required: false
        type: string
        format: uuid
      - in: query
        name: contact_id
        description: UUID of a contact
        default: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
        required: false
        type: string
        format: uuid
      - in: query
        name: investment_project_id
        description: UUID of a investment project
        default: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
        required: false
        type: string
        format: uuid
      - in: query
        name: offset
        type: integer
        description: Pagination parameter
        required: false
      - in: query
        name: limit
        type: integer
        description: Pagination parameter
        required: false
      responses:
        200:
          description: Single page of results
          schema:
            $ref: '#/definitions/InteractionList'
        400:
          description: bad input parameter
    post:
      tags:
      - interaction
      summary: Creates an interaction
      operationId: createInteraction
      description: Adds an interaction against a company, contact and/or investment project
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: interaction
        description: Interaction data
        required: true
        schema:
          $ref: '#/definitions/Interaction'
      responses:
        201:
          description: item created
        400:
          description: invalid input, object invalid
  /v3/interaction/{interactionId}:
    get:
      tags:
      - interaction
      summary: Gets an individual interaction
      operationId: getInteraction
      description: |
        Gets an individual interaction given an interaction ID
      produces:
      - application/json
      parameters:
      - in: path
        name: interactionId
        description: An interaction UUID
        required: true
        type: string
        format: uuid
      responses:
        200:
          description: Interaction object
          schema:
            $ref: '#/definitions/Interaction'
        400:
          description: bad input parameter
        404:
          description: interaction does not exist
    patch:
      tags:
      - interaction
      summary: Updates an interaction
      operationId: updateInteraction
      description: Updates an existing interaction, only changing fields specified in the request
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: interactionId
        description: UUID for a Data Hub interaction
        type: string
        required: true
      - in: body
        name: interaction
        description: Interaction data to update
        required: true
        schema:
          $ref: '#/definitions/Interaction'
      responses:
        200:
          description: item updated
        400:
          description: invalid input, object invalid
  /v3/investment:
    get:
      tags:
      - investment
      summary: returns a summary of investment projects for a company
      operationId: getprojectsforcompany
      description: Returns a summary list of investment projects per investor-company ID
      produces:
      - application/json
      parameters:
      - in: query
        name: investor_company_id
        description: UUID of a company with investment projects
        default: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
        required: false
        type: string
        format: uuid
      - in: query
        name: offset
        type: integer
        description: pagination parameter
        required: false
      - in: query
        name: limit
        type: integer
        description: pagination parameter
        required: false
      responses:
        200:
          description: JSON formatted array of investment project summaries
          schema:
            $ref: '#/definitions/InvestmentProjectsList'
        400:
          description: bad input parameter
    post:
      tags:
      - investment
      summary: adds the initial stage of an investment project
      operationId: createInvestment
      description: Creates a new investment project within Data Hub
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: investmentStageOne
        description: Investment to create a skeleton for
        required: true
        schema:
          $ref: '#/definitions/InvestmentProject'
      responses:
        201:
          description: item created
        400:
          description: invalid input, object invalid
        409:
          description: investment already exists
  /v3/investment/from:
    get:
      tags:
      - investment
      - unimplemented
      summary: returns a list of investment projects that have changed since a given time
      operationId: getprojectssincetime
      description: Returns a list of investment projects that have been modified since the _from_ time; this API should *not* paginate as it is intended solely for the user of MI to ingest changes to FDI projects
      produces:
      - application/json
      parameters:
      - in: query
        name: time
        type: string
        format: date-time
        description: RFC3339 formatted date time string
        required: true
      responses:
        200:
          description: JSON formatted array of investment project summaries
          schema:
            $ref: '#/definitions/InvestmentProjectsListFull'
        400:
          description: bad input parameter
  /v3/investment/{investmentId}:
    get:
      tags:
      - investment
      summary: Returns an investment project from the Data Hub repository
      operationId: getinvestment
      description: |
        Passing in a UUID returns a Data Hub investment object
      produces:
      - application/json
      parameters:
      - in: path
        name: investmentId
        description: UUID for a Data Hub investment project
        default: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
        required: true
        type: string
        format: uuid
      responses:
        200:
          description: JSON formatted investment project object
          schema:
            $ref: '#/definitions/InvestmentProject'
        400:
          description: bad input parameter
        404:
          description: investment does not exist
    patch:
      tags:
      - investment
      summary: updates an investment project object, from a partial JSON object
      operationId: patchInvestment
      description: Patches an existing investment project object
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: investmentId
        description: UUID for a Data Hub investment project
        default: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
        type: string
        required: true
      - in: body
        name: investment
        description: Investment project  data to update
        required: true
        schema:
          $ref: '#/definitions/InvestmentProject'
      responses:
        200:
          description: item updated
        400:
          description: invalid input, object invalid
  /v3/investment/{investmentId}/audit:
    get:
      tags:
      - investment
      summary: Get audit log
      operationId: getInvestmentAudit
      description: |
        Returns the audit log for a specified investment project
      produces:
      - application/json
      parameters:
      - in: path
        name: investmentId
        description: UUID of an investment project
        required: true
        type: string
        format: uuid
      responses:
        200:
          description: JSON investment object
          schema:
            $ref: '#/definitions/AuditItemList'
        404:
          description: investment project does not exist
  /v3/investment/{investmentId}/archive:
    post:
      tags:
      - investment
      summary: Archives an investment project with a reason
      operationId: archiveInvestment
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: investmentId
        description: UUID of investment project
        required: true
        type: string
        format: uuid
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ArchiveReason'
      responses:
        201:
          description: investment archived
        400:
          description: input invalid
        404:
          description: investment is already archived or does not exist
  /v3/investment/{investmentId}/unarchive:
    post:
      tags:
      - investment
      summary: Unarchives an investment project
      operationId: unarchiveInvestment
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: investmentId
        description: UUID of investment project
        required: true
        type: string
        format: uuid
      responses:
        201:
          description: investment archived
        400:
          description: input invalid
        404:
          description: investment is already archived or does not exist
  /v3/investment/{investmentId}/team-member:
    post:
      tags:
      - investment
      summary: Adds a team member to an investment project
      operationId: addInvestmentTeamMember
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: investmentId
        description: UUID of investment project
        required: true
        type: string
        format: uuid
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/InvestmentTeamMember'
      responses:
        201:
          description: team member added
        400:
          description: input invalid
    delete:
      tags:
      - investment
      summary: Removes all team members from an investment project
      operationId: removeAllInvestmentTeamMember
      parameters:
      - in: path
        name: investmentId
        description: UUID of investment project
        required: true
        type: string
        format: uuid
      responses:
        204:
          description: all team members removed
        400:
          description: input invalid
  /v3/investment/{investmentId}/team-member/{adviserId}:
    get:
      tags:
      - investment
      summary: Gets a team member's role
      operationId: getInvestmentTeamMember
      produces:
      - application/json
      parameters:
      - in: path
        name: investmentId
        description: UUID of investment project
        required: true
        type: string
        format: uuid
      - in: path
        name: adviserId
        description: UUID of adviser
        required: true
        type: string
        format: uuid
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/InvestmentTeamMember'
      responses:
        200:
          description: JSON formatted team member object
          schema:
            $ref: '#/definitions/InvestmentTeamMember'
        404:
          description: team member or investment project not found
    patch:
      tags:
      - investment
      summary: Updates a team member role
      operationId: updateInvestmentTeamMember
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: investmentId
        description: UUID of investment project
        required: true
        type: string
        format: uuid
      - in: path
        name: adviserId
        description: UUID of adviser
        required: true
        type: string
        format: uuid
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/InvestmentTeamMember'
      responses:
        200:
          description: team member updated
        400:
          description: input invalid
    delete:
      tags:
      - investment
      summary: Removes a team member from an investment project
      operationId: removeInvestmentTeamMember
      parameters:
      - in: path
        name: investmentId
        description: UUID of investment project
        required: true
        type: string
        format: uuid
      - in: path
        name: adviserId
        description: UUID of adviser
        required: true
        type: string
        format: uuid
      responses:
        204:
          description: team member removed
        400:
          description: input invalid
  /v3/investment/{investmentId}/document:
    post:
      tags:
      - investment
      summary: Requests a signed URI for S3 from the back end
      operationId: addInvestmentDocument
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: investmentId
        description: UUID of investment project
        required: true
        type: string
        format: uuid
      - in: body
        name: document
        description: object that contains the document filename and which the name of which section it belongs to
        required: true
        schema:
          type: object
          properties:
            filename:
              type: string
              example: "press release.pdf"
            doc_type:
              type: string
              example: "new_tech_to_uk_documents"
      responses:
        200:
          description: JSON formatted document location response
          schema:
            $ref: '#/definitions/DocumentLocation'
        400:
          description: input invalid
        404:
          description: investment does not exist
    get:
      tags:
        - investment
      summary: Returns a list of all documenst associated with a project
      operationId: getInvestmentDocuments
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: investmentId
        description: UUID of investment project
        required: true
        type: string
        format: uuid
      responses:
        200:
          description: list of documents associated with an investment project
          schema:
            $ref: '#/definitions/DocumentLocationList'
        400:
          description: input invalid
        404:
          description: investment does not exist
  /v3/investment/{investmentId}/document/{documentId}:
    get:
      tags:
      - investment
      summary: Retrieves a document associated with an investment project
      operationId: getInvestmentDocument
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: documentId
        description: id of the document to remove
        required: true
        type: string
        format: uuid
      - in: path
        name: investmentId
        description: UUID of investment project
        required: true
        type: string
        format: uuid
      responses:
        200:
          description: document location
          schema:
            $ref: '#/definitions/DocumentLocation'
        400:
          description: input invalid
        404:
          description: investment does not exist
  /v3/investment/{investmentId}/document/{documentId}/upload-callback:
    post:
      tags:
      - investment
      summary: tells the server a document has been uploaded
      operationId: getInvestmentDocument
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: documentId
        description: id of the document to remove
        required: true
        type: string
        format: uuid
      - in: path
        name: investmentId
        description: UUID of investment project
        required: true
        type: string
        format: uuid
      - in: body
        name: response
        required: true
        schema:
          type: object
          properties:
            status:
              type: string
              default: "success"
      responses:
        200:
          description: accepted
        400:
          description: input invalid
        404:
          description: investment does not exist
  /v3/investment/document/{documentId}:
    delete:
      tags:
      - investment
      summary: Tells the back end to forget a document associated with a project and a field
      operationId: addInvestmentDocument
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: documentId
        description: id of the document to remove
        required: true
        type: string
        format: uuid
      responses:
        204:
          description: document removed
        400:
          description: input invalid
        404:
          description: investment is already archived or does not exist
  /v3/metadata/business-activity:
    get:
      tags: 
      - investment
      - metadata
      summary: retrieves Business Activity metadata array
      operationId: metadataBusinessActivity
      produces:
      - application/json
      responses:
        200:
          description: metadata array
          schema:
            $ref: '#/definitions/BusinessActivities'
  /v3/metadata/documentable-fields:
    get:
      tags:
      - investment
      - metadata
      summary: retrieves the list of fields which require documents
      operationId: metadataDocumentableFields
      produces:
      - application/json
      responses:
        200:
          description: metadata array
          schema:
            $ref: '#/definitions/DocumentableFields'
  /search:
    get:
      tags:
      - search
      summary: Basic search endpoint for Data Hub
      operationId: datahubSearch
      description: Top level search for datahub
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: query
        name: term
        description: phrase to search for
        required: true
        type: string
      - in: query
        name: entity
        type: string
        description: which top level entity to search
        required: false
        default: 'company'
      responses:
        200:
          description: Search results
          schema:
            $ref: '#/definitions/AggregateSearchResults'
  /search/company:
    post:
      tags:
      - search
      summary: Basic search endpoint for Data Hub
      operationId: datahubSearch
      description: Top level search for datahub
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: filter
        required: true
        schema:
          $ref: '#/definitions/CompanyFilteredSearch'
      responses:
        200:
          description: Search results
          schema:
            $ref: '#/definitions/CompanySearchResults'
  /search/contact:
    post:
      tags:
      - search
      summary: Basic search endpoint for Data Hub
      operationId: datahubSearch
      description: Top level search for datahub
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: filter
        required: true
        schema:
          $ref: '#/definitions/ContactFilteredSearch'
      responses:
        200:
          description: Search results
          schema:
            $ref: '#/definitions/ContactSearchResults'
  /search/investment:
    post:
      tags:
      - search
      summary: Basic search endpoint for Data Hub
      operationId: datahubSearch
      description: Top level search for datahub
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: filter
        required: true
        schema:
          $ref: '#/definitions/InvestmentFilteredSearch'
      responses:
        200:
          description: Search results
          schema:
            $ref: '#/definitions/InvestmentSearchResults'
definitions:
  AuditItemList:
    type: object
    description: A list of audit log entries, representing historical changes made to the referenced object
    required:
    - results
    properties:
      results:
        type: array
        items:
          $ref: '#/definitions/AuditItem'
  AuditItem:
    type: object
    description: An audit log entry containing changes made to an object
    properties:
      id:
        type: integer
        example: 70
      user:
        $ref: '#/definitions/Adviser'
      timestamp:
        type: string
        format: date-time
        example: 2017-08-18T13:42:08.134932
      comment:
        type: string
        description: Only used for changes made via admin pages
        example: Changed telephone_number.
      changes:
        type: object
        description: Mapping of changes with changed field names as keys
        additionalProperties:
          type: array
          description: 'Array with exactly two items: [old value, new value]'
          minItems: 2
          maxItems: 2
          items:
            # JSON Schema supports items as an array, but this doesn't seem to work with OpenAPI 2.0
            type: string
            example: John
  Company:
    type: object
    description: A representation of the Data Hub company object
    required:
    - name
    - registered_address_1
    - registered_address_town
    properties:
      id:
        type: string
        format: uuid
        example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
      name:
        type: string
        example: 'EXAMPLE Ltd'
      trading_name:
        type: string
        example: 'Example Trading'
      uk_based:
        type: boolean
      registered_address_1:
        type: string
        example: '123 HIGH STREET'
      registered_address_2:
        type: string
        example: 'AREA'
      registered_address_town:
        type: string
        example: 'ANYTOWN'
      registered_address_county:
        type: string
        example: 'ANYSHIRE'
      registered_address_postcode:
        type: string
        example: 'AB1 2CD'
      created_on:
        type: string
        format: date-time
        example: 2014-07-23T10:36:04
      modified_on:
        type: string
        format: date-time
        example: 2014-07-23T10:36:04
      archived:
        type: boolean
      archived_on:
        type: string
        format: date-time
        example: 2014-07-23T10:36:04
      archived_reason:
        type: string
        example: 'Company dissolved'
      description:
        type: string
        example: 'MANUFACTURER OF WIDGETS AND DOODADS'
      website:
        type: string
        example: 'http://www.example.com'
      trading_address_1:
        type: string
        example: '123 HIGH STREET'
      trading_address_2:
        type: string
        example: 'AREA'
      trading_address_town:
        type: string
        example: 'ANYTOWN'
      trading_address_county:
        type: string
        example: 'ANYSHIRE'
      trading_address_postcode:
        type: string
        example: 'AB1 2CD'
      account_manager:
        $ref: '#/definitions/Adviser'
      archived_by:
        $ref: '#/definitions/Adviser'
      business_type:
        $ref: '#/definitions/BusinessType'
      children:
        $ref: '#/definitions/CompanyKeyArray'
      classification:
        $ref: '#/definitions/Classification'
      companies_house_data:
        $ref: '#/definitions/CompaniesHouseCompany'
      contacts:
        $ref: '#/definitions/ContactArray'
      employee_range:
        $ref: '#/definitions/EmployeeRange'
      export_to_countries:
        $ref: '#/definitions/CountryArray'
      future_interest_countries:
        $ref: '#/definitions/CountryArray'
      headquarter_type:
        $ref: '#/definitions/HeadquarterType'
      one_list_account_owner:
        $ref: '#/definitions/Adviser'
      parent:
        $ref: '#/definitions/CompanySlim'
      registered_address_country:
          $ref: '#/definitions/Country'
      sector:
        $ref: '#/definitions/Sector'
      trading_address_country:
          $ref: '#/definitions/Country'
      turnover_range:
        $ref: '#/definitions/TurnoverRange'
      uk_region:
        $ref: '#/definitions/UKRegion'
      investment_projects_invested_in:
        $ref: '#/definitions/InvestmentProjectsList'
      investment_projects_invested_in_count:
        type: integer
        example: 5
  Adviser:
    type: object
    required:
    - id
    - first_name
    - last_name
    properties:
      id:
        type: string
        format: uuid
        example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
      first_name:
        type: string
        example: 'Annette'
      last_name:
        type: string
        example: 'Adviser'
      name:
        type: string
        example: Annette Adviser
  BusinessType:
    type: object
    description: "Business Type metadata"
    required:
      - id
      - name
    properties:
      id:
        type: string
        format: uuid
        example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
      name:
        type: string
        example: 'Limited Company'
  Classification:
    type: object
    required:
      - id
      - name
    properties:
      id:
        type: string
        format: uuid
        example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
      name:
        type: string
        example: 'D - Post managed'
  CompanyKeyArray:
    type: array
    items:
      $ref: '#/definitions/CompanySlim'
  CompanySlim:
    type: object
    required:
    - id
    - name
    properties:
      id:
        type: string
        format: uuid
      name:
        type: string
        example: 'Company Registered Name Ltd'
  CountryArray:
    type: array
    items:
      $ref: '#/definitions/Country'
  Country:
    type: object
    description: "Country metadata"
    required:
      - id
      - name
    properties:
      id:
        type: string
        format: uuid
        example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
      name:
        type: string
        example: 'France'
  EmployeeRange:
    type: object
    description: "Employee range metadata"
    required:
    - id
    - name
    properties:
      id:
        type: string
        format: uuid
        example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
      name:
        type: string
        example: '10 - 100'
  Sector:
    type: object
    description: "Metadata"
    required:
      - id
      - name
    properties:
      id:
        type: string
        format: uuid
        example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
      name:
        type: string
        example: 'Advanced Engineering'
  HeadquarterType:
    type: object
    description: "Headquarters type metadata"
    required:
    - id
    - name
    properties:
      id:
        type: string
        format: uuid
      name:
        type: string
        example: 'HeadquarterType'
  TeamSlim:
    type: object
    required:
      - id
      - name
    properties:
      id:
        type: string
        format: uuid
        example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
      name:
        type: string
        example: Investment Services Team
  TurnoverRange:
    type: object
    required:
    - id
    - name
    properties:
      id:
        type: string
        format: uuid
      name:
        type: string
        example: '10 -100'
  UKRegion:
    type: object
    required:
    - id
    - name
    properties:
      id:
        type: string
        format: uuid
        example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
      name:
        type: string
        example: 'South East'
  CompaniesHouseCompany:
    type: object
    description: A Companies House company object
    required:
    - name
    - registered_address_1
    - registered_address_town
    - company_number
    properties:
      name:
        type: string
      registered_address_1:
        type: string
        example: '123 HIGH STREET'
      registered_address_2:
        type: string
        example: 'AREA'
      registered_address_town:
        type: string
        example: 'ANYTOWN'
      registered_address_county:
        type: string
        example: 'ANYSHIRE'
      registered_address_postcode:
        type: string
        example: 'AB1 2CD'
      company_number:
        type: string
        example: 'SCO-123456'
      company_category:
        type: string
        example: 'Private Limited Company'
      company_status:
        type: string
        example: 'Active - Proposal to Strike off'
      sic_code_1:
        type: string
        example: '20600 - Manufacture of man-made fibres'
      sic_code_2:
        type: string
        example: '52211 - Operation of rail freight terminals'
      sic_code_3:
        type: string
        example: '71111 - Architectural activities'
      sic_code_4:
        type: string
        example: '96030 - Funeral and related activities'
      uri:
        type: string
        example: 'http://www.example.com'
      incorporation_date:
        type: string
        format: date-time
        example: 2014-07-23T10:36:04
  ArchiveReason:
    type: object
    description: the reason supplied for archiving a company or contact
    required:
    - reason
    properties:
      reason:
        type: string
        example: 'Company has ceased trading'

  Contact:
    type: object
    required:
      - id
      - first_name
      - last_name
    properties:
      id:
        type: string
        format: uuid
        example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
      first_name:
        type: string
        example: 'Alison'
      last_name:
        type: string
        example: 'Contact'
      archived:
        type: boolean
      archived_on:
        format: date-time
        example: 2014-07-23T10:36:04
      archived_reason:
        type: string
        example: 'Archived Reason'
      created_on:
        format: date-time
        example: 2014-07-23T10:36:04
      modified_on:
        format: date-time
        example: 2014-07-23T10:36:04
      title:
        $ref: '#/definitions/ContactTitle'
      primary:
        type: boolean
      telephone_countrycode:
        type: string
        example: '+44'
      telephone_number:
        type: string
        example: '12345678'
      email:
        type: string
        example: 'valid@email.address'
      address_same_as_company:
        type: boolean
      address_1:
        type: string
        example: '1 Woodlane'
      address_2:
        type: string
        example: '1 Woodlane'
      address_town:
        type: string
        example: 'London'
      address_county:
        type: string
        example: 'County'
      address_postcode:
        type: string
        example: 'ABC 123'
      telephone_alternative:
        type: string
        example: 'Telegraph'
      email_alternative:
        type: string
        example: 'alternative@email.address'
      notes:
        type: string
        example: 'Notes'
      job_title:
        type: string
        example: 'Director'
      contactable_by_dit:
        type: boolean
      contactable_by_dit_partners:
        type: boolean
      contactable_by_email:
        type: boolean
      contactable_by_phone:
        type: boolean
      address_country:
        $ref: '#/definitions/Country'
      adviser:
        $ref: '#/definitions/Adviser'
      archived_by:
        $ref: '#/definitions/Adviser'
      company:
        $ref: '#/definitions/CompanySlim'
  ContactArray:
    type: array
    items:
      $ref: '#/definitions/Contact'
  ContactList:
    type: object
    required:
    - count
    - results
    properties:
      count:
        type: integer
        example: 30
      results:
        $ref: '#/definitions/ContactArray'
  ContactSlim:
    type: object
    required:
    - id
    properties:
      id:
        type: string
        format: uuid
        example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
      name:
        type: string
        example: George Theo
  ContactTitle:
    type: object
    description: "Title of the contact"
    required:
    - id
    - name
    properties:
      id:
        type: string
        format: uuid
      name:
        type: string
        example: 'Mr'
  Interaction:
    type: object
    description: An interaction (e.g. meeting, email) between DIT and a company
    required:
    - date
    - dit_adviser
    - dit_team
    - interaction_type
    - investment_project
    - service
    - subject
    - notes
    properties:
      id:
        type: string
        format: uuid
        example: d290f1ee-6c54-4b01-90e6-d701748f0851
      subject:
        type: string
        example: Exporting exhibition meeting
      notes:
        type: string
        example:
      date:
        type: string
        format: date
        example: 2020-01-01
      company:
        $ref: '#/definitions/CompanySlim'
      contact:
        $ref: '#/definitions/ContactSlim'
      dit_adviser:
        $ref: '#/definitions/Adviser'
      dit_team:
        $ref: '#/definitions/TeamSlim'
      interaction_type:
        $ref: '#/definitions/InteractionType'
      investment_project:
        $ref: '#/definitions/InvestmentProjectSlim'
      service:
        $ref: '#/definitions/Service'
  InteractionList:
    type: object
    required:
    - count
    - results
    properties:
      count:
        type: integer
        example: 30
      results:
        type: array
        items:
          $ref: '#/definitions/Interaction'
  InteractionType:
    type: object
    description: "Interaction type (mode of communication) metadata"
    required:
      - id
      - name
    properties:
      id:
        type: string
        format: uuid
        example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
      name:
        type: string
        example: 'Face to face'
  Service:
    type: object
    description: "Service metadata"
    required:
      - id
      - name
    properties:
      id:
        type: string
        format: uuid
        example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
      name:
        type: string
        example: 'Investment – Services'
  InvestmentProject:
    type: object
    description: A Data Hub investment project
    required:
    - business_activities
    - client_contacts
    - client_relationship_manager
    - description
    - estimated_land_date
    - investor_company
    - investment_type
    - name
    - nda_signed
    - referral_source_activity
    - sector
    properties:
      incomplete_fields:
        type: array
        description: List of names of fields that need to be completed in order to move the project to the next stage
        items:
          type: string
          example: 'total_investment'
      approved_commitment_to_invest:
        type: boolean
      approved_fdi:
        type: boolean
      approved_good_value:
        type: boolean
      approved_high_value:
        type: boolean
      approved_landed:
        type: boolean
      approved_non_fdi:
        type: boolean
      actual_land_date:
        type: string
        format: date
        example: '2018-11-01'
      business_activities:
        $ref: '#/definitions/BusinessActivities'
      other_business_activity:
        type: string
      client_contacts:
        $ref: '#/definitions/ContactArray'
      client_relationship_manager:
        $ref: '#/definitions/Adviser'
      description:
        type: string
        example: 'Marriott hotels wishes to open in a new part of Manchester under-served by its existing hotels'
      estimated_land_date:
        type: string
        format: date
        example: '2017-05-01'
      fdi_type:
        $ref: '#/definitions/FDIType'
      fdi_value:
        $ref: '#/definitions/FDIValue'
      id:
        type: string
        format: uuid
        example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
      intermediate_company:
        $ref: '#/definitions/CompanySlim'
      investor_company:
        $ref: '#/definitions/CompanySlim'
      investment_type:
        $ref: '#/definitions/InvestmentType'
      name:
        type: string
        example: 'Marriot Hotels - New hotel in Manchester'
      nda_signed:
        type: boolean
        example: false
      non_fdi_type:
        $ref: '#/definitions/NonFDIType'
      not_shareable_reason:
        type: string
        example: 'Company has asked us to keep project quiet until official announcement'
      stage:
        $ref: '#/definitions/Stage'
      status:
        type: string
        enum:
        - ongoing
        - delayed
        - abandoned
        - lost
      reason_delayed:
        type: string
        example: Problems getting planning permission
      reason_abandoned:
        type: string
        example: Funding lost
      date_abandoned:
        type: string
        format: date
        example: '2018-11-01'
      reason_lost:
        type: string
        example: Cheaper in other country
      date_lost:
        type: string
        format: date
        example: '2018-11-01'
      country_lost_to:
        $ref: '#/definitions/Country'
      project_code:
        type: string
        example: 'P-01234567'
      project_shareable:
        type: boolean
      quotable_as_public_case_study:
        type: boolean
        example: false
      referral_source_activity:
        $ref: '#/definitions/ReferralSourceActivity'
      referral_source_activity_marketing:
        $ref: '#/definitions/ReferralSourceActivityMarketing'
      referral_source_activity_website:
        $ref: '#/definitions/ReferralSourceActivityWebsite'
      referral_source_activity_event:
        type: string
        example: "Moscow Hotels Expo 2017"
      referral_source_advisor:
        $ref: '#/definitions/Adviser'
      sector:
        $ref: '#/definitions/Sector'
      value_complete:
        type: boolean
        example: false
        description: Whether the value section is complete enough to move to the next project stage
      total_investment:
        type: integer
        example: 145000000
      likelihood_of_landing:
        type: integer
        example: 60
      priority:
        type: string
        enum:
        - 1_low
        - 2_medium
        - 3_high
      client_cannot_provide_total_investment:
        type: boolean
        example: false
      foreign_equity_investment:
        type: integer
        example: 100000000
      client_cannot_provide_foreign_investment:
        type: boolean
        example: false
      government_assistance:
        type: boolean
        example: false
      some_new_jobs:
        type: boolean
        example: false
      number_new_jobs:
        type: integer
        example: 100
      will_new_jobs_last_two_years:
        type: boolean
        example: false
      number_safeguarded_jobs:
        type: integer
        example: 100
      r_and_d_budget:
        type: boolean
        example: false
      non_fdi_r_and_d_budget:
        type: boolean
        example: false
      new_tech_to_uk:
        type: boolean
        example: false
      export_revenue:
        type: boolean
        example: false
      average_salary:
        type: object
        required:
        - id
        - name
        properties:
          id:
            type: string
            format: uuid
            example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
          name:
            type: string
            example: '£35,000'
      requirements_complete:
        type: boolean
        example: false
        description: Whether the requirements section is complete enough to move to the next project stage
      client_requirements:
        type: string
        example: 'Marriott are looking to expand into a city or town where they do not currently have a presence, or have room for expansion....'
      address_line_1:
        type: string
        example: '19 Railway Cuttings'
      address_line_2:
        type: string
        example: 'East Cheam'
      address_line_3:
        type: string
        example: 'Surrey'
      client_considering_other_countries:
        type: boolean
        example: false
      competitor_countries:
        $ref: '#/definitions/CountryArray'
      uk_region_locations:
        $ref: '#/definitions/UKRegions'
      strategic_drivers:
        $ref: '#/definitions/StrategicDriverArray'
      uk_company_decided:
        type: boolean
        example: false
      uk_company:
        $ref: '#/definitions/CompanySlim'
      address_postcode:
        type: string
        example: 'SN1 1AA'
      project_manager_team:
        $ref: '#/definitions/AdviserTeam'
      project_manager:
        $ref: '#/definitions/Adviser'
      project_assurance_team:
        $ref: '#/definitions/AdviserTeam'
      project_assurance_adviser:
        $ref: '#/definitions/Adviser'
      team_members:
        $ref: '#/definitions/InvestmentTeamMemberArray'
        description: Additional team members assigned to this project. Read-only in this endpoint.
      team_complete:
        type: boolean
        example: false
        description: Whether the team section is complete enough to move to the next project stage

  InvestmentProjectsList:
    type: object
    required:
    - count
    - results
    properties:
      count:
        type: integer
        example: 30
      results:
        type: array
        items:
          $ref: '#/definitions/InvestmentProjectSlim'
  InvestmentProjectSlim:
    type: object
    description: A Data Hub investment project summary
    properties:
      id:
        type: string
        format: uuid
        example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
      name:
        type: string
        example: 'Marriot Hotels - New hotel in Manchester'
      project_code:
        type: string
        example: 'P-01234567'
  InvestmentProjectsListFull:
    type: object
    required:
    - count
    - results
    properties:
      count:
        type: integer
        example: 30
      results:
        type: array
        items:
          $ref: '#/definitions/InvestmentProject'
  BusinessActivity:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        format: uuid
        example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
      name:
        type: string
        example: 'Retail'
  ReferralSourceActivity:
    type: object
    required:
      - id
      - name
    properties:
      id:
        type: string
        format: uuid
        example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
      name:
        type: string
        example: 'Cold Call'
  ReferralSourceActivityWebsite:
    type: object
    required:
      - id
      - name
    properties:
      id:
        type: string
        format: uuid
        example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
      name:
        type: string
        example: 'DIT Regional Website'
  ReferralSourceActivityMarketing:
    type: object
    required:
      - id
      - name
    properties:
      id:
        type: string
        format: uuid
        example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
      name:
        type: string
        example: 'Press advertisement'
  FDIType:
    type: object
    description: "FDI Metadata"
    required:
    - id
    - name
    properties:
      id:
        type: string
        format: uuid
        example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
      name:
        type: string
        example: 'Merger'
  NonFDIType:
    type: object
    description: "Non-FDI Metadata"
    required:
    - id
    - name
    properties:
      id:
        type: string
        format: uuid
        example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
      name:
        type: string
        example: 'Advanced Engineering Supply Chain'
  FDIValue:
    type: object
    description: "FDI value categorisation"
    required:
    - id
    - name
    properties:
      id:
        type: string
        format: uuid
        example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
      name:
        type: string
        example: 'Good'
  AdviserTeam:
    type: object
    required:
    - id
    - name
    properties:
      id:
        type: string
        format: uuid
        example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
      name:
        type: string
        example: 'Sector Advisory Services'
  Stage:
    type: object
    description: 'Project stage metadata'
    required:
    - id
    - name
    properties:
      id:
        type: string
        format: uuid
        example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
      name:
        type: string
        example: 'Active'
  StrategicDriverArray:
    type: array
    items:
      $ref: '#/definitions/StrategicDriver'
  StrategicDriver:
    type: object
    description: 'Strategic Driver metadata'
    required:
    - id
    - name
    properties:
      id:
        type: string
        format: uuid
        example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
      name:
        type: string
        example: 'Access to market'
  InvestmentTeamMember:
    type: object
    required:
      - adviser
      - role
    properties:
      adviser:
        $ref: '#/definitions/Adviser'
      role:
        type: string
        example: 'Sector adviser'
  InvestmentTeamMemberArray:
    type: array
    items:
      $ref: '#/definitions/InvestmentTeamMember'
  InvestmentType:
    type: object
    description: 'Investment Type metadata - one of FDI, Non-FDI, Commitment to Invest'
    required:
    - id
    - name
    properties:
      id:
        type: string
        format: uuid
        example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
      name:
        type: string
        example: 'FDI'
  UKRegions:
    type: array
    items:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
        name:
          type: string
          example: 'South East England'
  Documents:
    type: array
    items:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
        uri:
          type: string
          format: uri
  DocumentableFields:
    type: array
    items:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
        name:
          type: string
  DocumentLocation:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
      project:
        type: object
        properties:
          id:
            type: string
            format: uuid
            example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
          name:
            type: string
            example: "New hotel in Manchester"
      doc_type:
        type: string
        example: "new_tech_to_uk_documents"
        description: 'one of actual_land_date, hq, foreign_ownership, operations_commenced, total_investment,
        foreign_equity_investment, number_new_jobs, number_safeguarded_jobs, r_and_d_budget, new_tech_to_uk,
        export_revenue, average_salary'
      filename:
        type: string
        example: "press_release.pdf"
        description: "this will be null if the document has been submitted (so exists) but has not passed the antivirus check yet"
      signed_url:
        type: string
        format: uri
      signed_upload_url:
        type: string
        format: uri
        description: "only returned after a succesful POST - if POST fails this will be empty"
  DocumentLocationList:
    type: object
    properties:
      count:
        type: integer
      next:
        type: string
        format: uri
      previous:
        type: string
        format: uri
      results:
        type: array
        items:
          $ref: '#/definitions/DocumentLocation'
  BusinessActivities:
    type: array
    items:
      $ref: '#/definitions/BusinessActivity'
  AggregateSearchResults:
    required:
    - "count"
    - "aggregates"
    description: 'Note: only one of the two possible arrays will be populated depending on the search response'
    properties:
      count:
        type: "integer"
        example: 30
      aggregates:
        type: array
        items:
          type: object
          properties:
            count:
              type: integer
              example: 3015
            entity:
              type: string
              example: "Events"
      companies:
        type: "array"
        items:
          $ref: "#/definitions/Company"
      contacts:
        type: "array"
        items:
          $ref: "#/definitions/Contact"
      investments:
        type: "array"
        items:
          $ref: "#/definitions/InvestmentProject"
  CompanyFilteredSearch:
    type: object
    properties:
      account_manager:
        type: string
        format: uuid
        example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
      alias:
        type: string
        example: 'DEF Ventures'
      description:
        type: string
        example: 'greenfield pharmaceutical'
      exclusions:
          $ref: '#/definitions/CompanyExclusionFilters'
      export_to_country:
        type: string
        format: uuid
        example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
      future_interest_country:
        type: string
        format: uuid
        example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
      name:
        type: string
        example: 'ABC Company'
      original_query:
        type: string
        example: 'ABC DEF'
      sector:
        type: string
        format: uuid
        example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
      trading_address_town:
        type: string
        example: 'Shipton'
      trading_address_country:
        type: string
        format: uuid
        example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
      trading_address_postcode:
        type: string
        example: 'AB1 2CD'
      uk_region:
        type: string
        format: uuid
        example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
  CompanyExclusionFilters:
    type: object
    properties:
      alias:
        type: string
        example: 'DEF Ventures'
      export_to_country:
        type: string
        format: uuid
        example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
      future_interest_country:
        type: string
        format: uuid
        example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
      name:
        type: string
        example: 'ABC Company'
      sector:
        type: string
        format: uuid
        example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
      trading_address_town:
        type: string
        example: 'Shipton'
      trading_address_country:
        type: string
        format: uuid
        example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
      trading_address_postcode:
        type: string
        example: 'AB1 2CD'
      uk_based:
        type: boolean
        example: False
      uk_region:
        type: string
        format: uuid
        example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'

  CompanySearchResults:
    required:
    - "count"
    - "results"
    properties:
      count:
        type: "integer"
        example: 30
      results:
        type: "array"
        items:
          $ref: "#/definitions/Company"
  ContactFilteredSearch:
    type: object
    properties:
      original_query:
        type: string
        example: 'Corine Contact'
      first_name:
        type: string
        example: 'Corine'
      last_name:
        type: string
        example: 'Contact'
      job_title:
        type: string
        example: 'Managing director'
      company:
        type: string
        example: 'DEF Ventures'
      advisor:
        type: string
        format: uuid
        example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
      notes:
        type: string
        example: 'greenfield pharmaceutical'
  ContactSearchResults:
    required:
    - "count"
    - "results"
    properties:
      count:
        type: "integer"
        example: 30
      results:
        type: "array"
        items:
          $ref: "#/definitions/Contact"
  InvestmentFilteredSearch:
    type: object
    properties:
      client_relationship_manager:
        type: string
        format: uuid
        example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
      description:
        type: string
        example: 'Marriott'
      estimated_land_date_after:
        type: string
        format: date
        example: '2017-05-01'
      estimated_land_date_before:
        type: string
        format: date
        example: '2017-05-01'
      investor_company:
        type: string
        format: uuid
        example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
      investment_type:
        type: string
        format: uuid
        example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
      stage:
        type: string
        format: uuid
        example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
      sector:
        type: string
        format: uuid
        example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
  InvestmentSearchResults:
    required:
    - "count"
    - "results"
    properties:
      count:
        type: "integer"
        example: 30
      results:
        type: "array"
        items:
          $ref: "#/definitions/InvestmentProject"

