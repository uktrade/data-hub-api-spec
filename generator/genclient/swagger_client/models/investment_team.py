# coding: utf-8

"""
    Data Hub API

    Data Hub API

    OpenAPI spec version: 1.0.0
    Contact: jim.smith@digital.trade.gov.uk
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class InvestmentTeam(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, id=None, project_manager_team=None, project_manager=None, project_assurance_team=None, project_assurance_advisor=None):
        """
        InvestmentTeam - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'id': 'str',
            'project_manager_team': 'AdvisorTeam',
            'project_manager': 'Advisor',
            'project_assurance_team': 'AdvisorTeam',
            'project_assurance_advisor': 'Advisor'
        }

        self.attribute_map = {
            'id': 'id',
            'project_manager_team': 'project_manager_team',
            'project_manager': 'project_manager',
            'project_assurance_team': 'project_assurance_team',
            'project_assurance_advisor': 'project_assurance_advisor'
        }

        self._id = id
        self._project_manager_team = project_manager_team
        self._project_manager = project_manager
        self._project_assurance_team = project_assurance_team
        self._project_assurance_advisor = project_assurance_advisor

    @property
    def id(self):
        """
        Gets the id of this InvestmentTeam.

        :return: The id of this InvestmentTeam.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this InvestmentTeam.

        :param id: The id of this InvestmentTeam.
        :type: str
        """

        self._id = id

    @property
    def project_manager_team(self):
        """
        Gets the project_manager_team of this InvestmentTeam.

        :return: The project_manager_team of this InvestmentTeam.
        :rtype: AdvisorTeam
        """
        return self._project_manager_team

    @project_manager_team.setter
    def project_manager_team(self, project_manager_team):
        """
        Sets the project_manager_team of this InvestmentTeam.

        :param project_manager_team: The project_manager_team of this InvestmentTeam.
        :type: AdvisorTeam
        """

        self._project_manager_team = project_manager_team

    @property
    def project_manager(self):
        """
        Gets the project_manager of this InvestmentTeam.

        :return: The project_manager of this InvestmentTeam.
        :rtype: Advisor
        """
        return self._project_manager

    @project_manager.setter
    def project_manager(self, project_manager):
        """
        Sets the project_manager of this InvestmentTeam.

        :param project_manager: The project_manager of this InvestmentTeam.
        :type: Advisor
        """

        self._project_manager = project_manager

    @property
    def project_assurance_team(self):
        """
        Gets the project_assurance_team of this InvestmentTeam.

        :return: The project_assurance_team of this InvestmentTeam.
        :rtype: AdvisorTeam
        """
        return self._project_assurance_team

    @project_assurance_team.setter
    def project_assurance_team(self, project_assurance_team):
        """
        Sets the project_assurance_team of this InvestmentTeam.

        :param project_assurance_team: The project_assurance_team of this InvestmentTeam.
        :type: AdvisorTeam
        """

        self._project_assurance_team = project_assurance_team

    @property
    def project_assurance_advisor(self):
        """
        Gets the project_assurance_advisor of this InvestmentTeam.

        :return: The project_assurance_advisor of this InvestmentTeam.
        :rtype: Advisor
        """
        return self._project_assurance_advisor

    @project_assurance_advisor.setter
    def project_assurance_advisor(self, project_assurance_advisor):
        """
        Sets the project_assurance_advisor of this InvestmentTeam.

        :param project_assurance_advisor: The project_assurance_advisor of this InvestmentTeam.
        :type: Advisor
        """

        self._project_assurance_advisor = project_assurance_advisor

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, InvestmentTeam):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
