  /v3/investment/project:
    get:
      tags:
      - investment
      summary: returns a summary of investment projects for a company
      operationId: getprojectsforcompany
      description: Returns a summary list of investment projects per investor-company ID
      produces:
      - application/json
      parameters:
      - in: query
        name: investor_company_id
        description: UUID of a company with investment projects
        default: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
        required: false
        type: string
        format: uuid
      - in: query
        name: offset
        type: integer
        description: pagination parameter
        required: false
      - in: query
        name: limit
        type: integer
        description: pagination parameter
        required: false
      responses:
        200:
          description: JSON formatted array of investment project summaries
          schema:
            $ref: '#/definitions/InvestmentProjectsList'
        400:
          description: bad input parameter
    post:
      tags:
      - investment
      summary: adds the initial stage of an investment project
      operationId: createInvestment
      description: Creates a new investment project within Data Hub
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: investmentStageOne
        description: Investment to create a skeleton for
        required: true
        schema:
          $ref: '#/definitions/InvestmentProject'
      responses:
        201:
          description: item created
        400:
          description: invalid input, object invalid
        409:
          description: investment already exists
  /v3/investment/{investmentId}/project:
    get:
      tags:
      - investment
      summary: Returns an investment project from the Data Hub repository
      operationId: getinvestment
      description: |
        Passing in a UUID returns a Data Hub investment object
      produces:
      - application/json
      parameters:
      - in: path
        name: investmentId
        description: UUID for a Data Hub investment project
        default: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
        required: true
        type: string
        format: uuid
      responses:
        200:
          description: JSON formatted investment project object
          schema:
            $ref: '#/definitions/InvestmentProject'
        400:
          description: bad input parameter
        404:
          description: investment does not exist
    patch:
      tags:
      - investment
      summary: updates an investment project object, from a partial JSON object
      operationId: patchInvestment
      description: Patches an existing investment project object
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: investmentId
        description: UUID for a Data Hub investment project
        default: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
        type: string
        required: true
      - in: body
        name: investment
        description: Investment project  data to update
        required: true
        schema:
          $ref: '#/definitions/InvestmentProject'
      responses:
        200:
          description: item updated
        400:
          description: invalid input, object invalid
  /v3/investment/{investmentId}/archive:
    post:
      tags:
      - investment
      summary: Archives an investment project with a reason
      operationId: archiveInvestment
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: investmentId
        description: UUID of investment project
        required: true
        type: string
        format: uuid
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ArchiveReason'
      responses:
        201:
          description: investment archived
        400:
          description: input invalid
        404:
          description: investment is already archived or does not exist
  /v3/investment/{investmentId}/unarchive:
    post:
      tags:
      - investment
      summary: Unarchives an investment project
      operationId: unarchiveInvestment
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: investmentId
        description: UUID of investment project
        required: true
        type: string
        format: uuid
      responses:
        201:
          description: investment archived
        400:
          description: input invalid
        404:
          description: investment is already archived or does not exist
  /v3/investment/{investmentId}/document:
    post:
      tags:
      - investment
      summary: Tells the back end that a document has successfully uploaded and where to find it
      operationId: addInvestmentDocument
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: investmentId
        description: UUID of investment project
        required: true
        type: string
        format: uuid
      - in: body
        name: document
        description: object that contains the document URL and which the id of which section it belongs to
        required: true
        schema:
          type: object
          properties:
            uri:
              type: string
              format: uri
            field:
              type: string
              format: uuid
      responses:
        201:
          description: document added
        400:
          description: input invalid
        404:
          description: investment is already archived or does not exist
  /v3/investment/document/{documentId}:
    delete:
      tags:
      - investment
      summary: Tells the back end to forget a docuemtn associated with a project and a field
      operationId: addInvestmentDocument
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: documentId
        description: id of the document to remove
        required: true
        type: string
        format: uuid
      responses:
        204:
          description: document removed
        400:
          description: input invalid
        404:
          description: investment is already archived or does not exist
  /v3/metadata/business_activity:
    get:
      tags: 
      - investment
      - metadata
      summary: retrieves Business Activity metadata array
      operationId: metadataBusinessActivity
      produces:
      - application/json
      responses:
        200:
          description: metadata array
          schema:
            $ref: '#/definitions/BusinessActivities'
  /v3/metadata/documentable_fields:
    get:
      tags:
      - investment
      - metadata
      summary: retrieves the list of fields which require documents
      operationId: metadataDocumentableFields
      produces:
      - application/json
      responses:
        200:
          description: metadata array
          schema:
            $ref: '#/definitions/DocumentableFields'

